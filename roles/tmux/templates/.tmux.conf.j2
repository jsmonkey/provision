#---------------------------------------------
# Plugins 
#---------------------------------------------

# tmp - plugin manager
# Prefix + I - install plugins
# Prefix + U - update plugins
set -g @plugin 'tmux-plugins/tpm'

# predefined settings
set -g @plugin 'tmux-plugins/tmux-sensible'

# copy to system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

# regex search
set -g @plugin 'tmux-plugins/tmux-copycat'

# open highlighted selection
set -g @plugin 'tmux-plugins/tmux-open'

set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"

# Run tmp
run '{{ tmux_path }}/plugins/tpm/tpm'


#---------------------------------------------
# Configuration
#---------------------------------------------
set-option -g default-shell /usr/local/bin/zsh

# fix terminal colors
set -g default-terminal "screen-256color" # colors!
# tell Tmux that outside terminal supports true color
set -ga terminal-overrides ",xterm-256color*:Tc"

# change color of session selection line
set -wg mode-style bg=colour8,fg=white

set-option -sg escape-time 0

# use vim key bindings
setw -g mode-keys vi

# disable mouse
set -g mouse off

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# start windows at 1, not 0
set -g base-index 1

# start panes at 1, not 0
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on


#---------------------------------------------
# Status bar styles
#---------------------------------------------

setw -g status-left ""
setw -g status-right ""

setw -g status-bg black
setw -g status-fg white

setw -g window-status-format " #I: #W "
setw -g window-status-current-format " #I: #W "

set -g window-status-current-style fg=white,bg=colour8


#---------------------------------------------
# Bindings
#---------------------------------------------

# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# reload config
bind r source-file {{ tmux_config_path }} \; display-message "{{ tmux_config_path }} reloaded"

# split window vertically
bind | split-window -h -c "#{pane_current_path}" 

# split window horizontally
bind - split-window -v -c "#{pane_current_path}" 
unbind '"' 
unbind %

#---------------------------------------------
# Panes
#---------------------------------------------

# create new pane
bind c new-window -c '#{pane_current_path}' 

# toggle panes line
bind h set -g status 

#---------------------------------------------
# Vim like copy / paste 
#---------------------------------------------

# starts selection mode
bind C-[ copy-mode
bind -T copy-mode-vi 'v' send -X begin-selection

# copy with 'enter' or 'y' and send to mac os clipboard: http://goo.gl/2Bfn8
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# paste
bind p paste-buffer

# paste from system clipboard MacOS
# bind-key -n 'C-v' run \"tmux set-buffer \"$(reattach-to-user-namespace pbpaste)\"; tmux paste-buffer"

#---------------------------------------------
# Vim like navigation
#---------------------------------------------
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | rg -iq -e '^[^TXZ ]+ +(\S+)?g?(view|fzf|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

#---------------------------------------------
# Vim like pane resize 
#---------------------------------------------

bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'resize-pane -D 3'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'resize-pane -U 3'
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'resize-pane -L 3'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'resize-pane -R 3'
